name: Publish

on:
  push:
    branches:
      - main
      - release
      - v1
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.inputs.commit }}
      - uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      - name: Set NPM variables
        id: npm
        run: |
          BRANCH=${GITHUB_REF##*/}
          DIST_TAG=rc
          if [[ $BRANCH == "release" ]]; then
            DIST_TAG=latest
          fi
          echo "dist_tag=${DIST_TAG}" >> $GITHUB_OUTPUT

          pnpm config list
      - name: Install
        run: pnpm install
      - name: Build All
        run: pnpm build:all
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 24.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Release Summary
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "### New version v${{ steps.semantic.outputs.new_release_version }} cut" >> $GITHUB_STEP_SUMMARY
          echo "commit: ${GITHUB_SHA}, branch/tag: ${GITHUB_REF}" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.semantic.outputs.new_release_notes }}" >> $GITHUB_STEP_SUMMARY
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: NPM Publish
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          ./scripts/update-version.sh "./packages/*" ${{ steps.semantic.outputs.new_release_version }}
          pnpm publish --filter "./packages/*" --no-git-checks --access=public --tag ${{ steps.npm.outputs.dist_tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: report error
        if: steps.semantic.outputs.new_release_published == 'false'
        run: |
          echo "### No version cut" >> $GITHUB_STEP_SUMMARY
          echo "Check Semantic Release output for details"
      - name: Clean Github Release for RC
        if: ${{ contains(steps.semantic.outputs.new_release_version, '-rc.') == false }}
        run:  ./scripts/clean-rc-releases.sh
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
